{"version":3,"sources":["components/Filter.js","services/Persons.js","components/Add.js","components/Delete.js","components/PersonsData.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","baseUrl","axios","get","newObject","post","id","delete","put","Add","onSubmit","event","preventDefault","edited_person","name_exists","new_persons","persons","map","person","name","Object","assign","number","window","confirm","personsService","then","setPersons","setNewName","setNewNumber","showNote","catch","error","p","personObject","response","concat","data","handleName","handleNumber","type","Delete_person","Info","onClick","deleting","PersonsData","filtered_people","toLocaleLowerCase","includes","individual","key","NotificationMessage","message","notif_style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","newName","newNumber","newFilter","setNewFilter","notification","setNotification","useEffect","type_error","setTimeout","target","Delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c8d504c.chunk.js","sourcesContent":["import React from 'react'\n\n//Handles the Filter form (actual filtering is handled in \"PersonsData.js\")\nconst Filter = (props) => (\n    <form>\n        <div>Filter with name: <input value={props.filter} onChange={props.handleFilter}/></div>\n    </form>\n)\n\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst add = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst edit = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { getAll, add, remove, edit}","import React from 'react'\nimport personsService from '../services/Persons'\n\n\n//Handles the addition and editing of person data\n//Returns the forms that allow the addition of name and phone-number\nconst Add = (props) => {\n    \n    const addPerson = (event) =>{\n        event.preventDefault() //otherwise reloads\n        let name_exists = false\n        let edited_person\n\n        let new_persons = props.persons.map(person => {\n            if(person.name === props.name){ \n                name_exists=true\n                edited_person = Object.assign({}, person)\n                edited_person.number = props.number\n                return edited_person\n            }else return person\n        })\n\n        //Editing persons number\n        if(name_exists){\n            if (window.confirm(`${props.name} is alredy added to phonebook,\n            replace the old number with a new one?`)) { \n                personsService\n                    .edit(edited_person.id, edited_person)\n                    .then(\n                        props.setPersons(new_persons), \n                        props.setNewName(''),\n                        props.setNewNumber(''),  \n                        props.showNote(`${props.name} number changed to ${edited_person.number}`, false),\n                    ).catch(error => {\n                        props.showNote(`Person ${props.name} has alredy been removed from the server`, true)\n                        props.setPersons(new_persons.filter(p => p.id !== edited_person.id))\n                      })\n                return\n            }else return\n\n        }\n\n        //If name or number empty throw visible warning\n        if(props.name === \"\" || props.number === \"\"){\n            props.showNote(\"Please enter name AND number\", true)\n            return\n        }\n\n        const personObject = {\n            name: props.name,\n            number: props.number,}\n\n        personsService\n            .add(personObject)\n            .then(response =>\n                props.setPersons(props.persons.concat(response.data)),\n                props.setNewName(''),\n                props.setNewNumber(''),\n                props.showNote(`Added ${props.name}`, false),         \n            ).catch(error => {\n                props.showNote(error.response.data.error, true)\n            })\n    }\n\n    \n    return(\n    <form onSubmit={addPerson}>\n        <div>name: <input value={props.name} onChange={props.handleName}/></div>\n        <div>number: <input value={props.number} onChange={props.handleNumber}/></div>\n        <div><button type=\"submit\">add</button>\n        </div>\n    </form>\n)}\n\nexport default Add\n","import personsService from '../services/Persons'\n\n\nconst Delete_person = (person, persons, setPersons, showNote) => {\n    let new_persons = []\n    if (window.confirm(`Delete ${person.name}?`)) { \n        new_persons = persons.filter(function(p) {\n             return p.id !== person.id\n            })\n        personsService\n            .remove(person.id)\n            .then(\n                setPersons(new_persons), \n                showNote(`Deleted ${person.name}`, false),  \n            )\n    }\n}\n\nexport default Delete_person\n","import React from 'react'\n\n\nconst Info = (props) => (\n  <tr>\n    <td>{props.person.name}</td>\n    <td>{props.person.number}</td>\n    <td><button type=\"button\" onClick={() => props.deleting(props.person)}>delete</button></td>\n  </tr>\n)\n\n\n\n//Handles all person data\n//Returns all or filtered person data\nconst PersonsData = (props) => {\n\n    //Filter if required\n    var filtered_people = props.persons\n\n    if(props.filter !== ''){\n        filtered_people = props.persons.filter(function(person) {\n        return person.name.toLocaleLowerCase().includes(props.filter.toLocaleLowerCase())})\n      }\n    return (\n      <table>\n        <tbody>\n          {filtered_people.map(individual => \n          <Info key={individual.name} person={individual} deleting={props.deleting}/>)}\n        </tbody>\n      </table>\n    )\n      \n  }\n\nexport default PersonsData\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Add from './components/Add'\nimport Delete from './components/Delete'\nimport PersonsData from './components/PersonsData'\nimport personsService from './services/Persons'\n\n\nconst NotificationMessage = ({ message }) => {\n  const notif_style = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: '10',\n    marginBottom: '10',\n  }\n  if (message === null) {\n    return null\n  }\n  //If notif type error, red if not green\n  notif_style.color = message[1] ? 'red' : 'green'\n  return (\n    <div style={notif_style}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n\n  //Get persons data from local server\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        //console.log(response.data.persons)\n        setPersons(response.data.persons)\n      })\n  }, [])\n\n  \n\n  //Deleting a person data\n  const deleting = (person) => {\n    Delete(person, persons, setPersons, showNote)\n  }\n\n  //Display notification message\n  const showNote = (message, type_error) =>{\n    setNotification([`${message}`, type_error])\n    setTimeout(() => {setNotification(null)}, 5000)\n  }\n\n  //Handles what happens when writing in the name input\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  //Handles what happens when writing in the number input\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationMessage message={notification}/>\n      <Filter value={newFilter} handleFilter={handleFilterChange}/>     \n      <h3>Add new</h3>\n      <Add  name={newName} setNewName={setNewName}\n            number={newNumber} setNewNumber={setNewNumber}\n            persons={persons} setPersons={setPersons}\n            handleName={handleNameChange}\n            handleNumber={handleNumChange}\n            showNote={showNote}\n            />\n    \n      <h2>Numbers</h2>\n      <PersonsData filter={newFilter} persons={persons} deleting={deleting}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\n//App\n//   PersonsData\n//   Add  \n//   Filter\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}